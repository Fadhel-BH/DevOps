pipeline {
        
        agent any
        environment {
            MAVEN_HOME="/usr/share/maven"
            PATH="$PATH:$MAVEN_HOME/bin"
        }
        stages {
            stage('CHECKOUT GIT') {
                
                steps{
                    echo 'Pulling...';
                    git branch: 'yassineABD',
                    url: 'https://github.com/Fadhel-BH/DevOps.git',
                    credentialsId: '49c6b959-f4d8-4771-b2b9-adce2dc888fc';
                }
            }
            stage('BUILD') {
                steps{
                    sh 'mvn -f pom.xml clean install'
                    
                }
            }
            stage('Unit-Test') {
                steps {
                    sh 'mvn -f pom.xml clean test' 
                }
            } 
             stage('Sonar') {
            steps {
               sh 'mvn sonar:sonar -Dsonar.projectKey=devops -Dsonar.host.url=http://172.10.0.140:9000 -Dsonar.login=5365ceea414bddd7bc46e4d5aa30debf16521ad8'
            }
        }
           stage('Package') {
            steps {
                sh 'mvn package'
            }
        } 
        stage('Deploy') {
            steps {
                        nexusArtifactUploader(
                            nexusVersion: 'nexus3',
                            protocol: 'http',
                            nexusUrl: 'http://172.10.0.140:8081/nexus',
                            groupId: 'tn.esprit.spring',
                            version: '1.0',
                            repository: 'devopsYassine',
                            credentialsId: 'nexus_creds',
                            artifacts: [
                                [artifactId: 'app.jar',
                                 classifier: '',
                                 file: 'target/app.jar',
                                 type: 'jar']
                            ]
                         )
            }
        }
        stage('docker-build') {
            steps {
                sh 'curl -u admin:admin -O http://localhost:8081/nexus/repository/devOps-project-releases/tn/esprit/spring/1.0/ExamThourayaS2-0.0.1-SNAPSHOT.jar'
                script {
                            docker.withRegistry('https://index.docker.io/v1', 'dockerhub_creds') {
                            def image = docker.build('yassineabd/spring2', '-f dockerfile .')
                            }
                }

            }
        }
               stage('docker-push') {
                 steps {
                      
                       sh 'docker login -u fadhelbh -p u$#DQeu8pMbkQzV'
                       sh 'docker tag yassineabd/spring2 yassineabd/spring2:v1'
                       sh 'docker push yassineabd/spring2:v1'
                 }
               } 
                 stage('Docker-compose-run') {
          steps {
            // Copy the docker-compose.yml file to the workspace
            // sh 'cp ~/mydockerfiles/docker-compose.yaml .'

            // Replace the image tag in the docker-compose.yml file with the current Git commit hash
            // sh "sed -i 's/my_app:.*/my_app:${GIT_COMMIT}/' docker-compose.yml"

            // Start the Docker Compose stack
            sh 'docker compose up -d'
          }
        }

            
        }
        
        
    }