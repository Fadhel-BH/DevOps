pipeline {
        
        agent any
        environment {
            MAVEN_HOME="/usr/share/maven"
            PATH="$PATH:$MAVEN_HOME/bin"
        }
        stages {
            stage('CHECKOUT GIT') {
                
                steps{
                    echo 'Pulling...';
                    git branch: 'Fadhel-branch',
                    url: 'https://github.com/Fadhel-BH/DevOps.git',
                    credentialsId: 'd07792a9-ebc0-4cad-a007-92354abedd2c';
                }
            }
            stage('BUILD') {
                steps{
                    sh 'mvn -f pom.xml clean install'
                    
                }
            }
            stage('Unit-Test') {
                steps {
                    sh 'mvn -f pom.xml clean test' 
                }
            } 
             stage('Sonar') {
            steps {
               sh 'mvn sonar:sonar -Dsonar.projectKey=token -Dsonar.login=84573209ba0295e49651f61dfb0f717df1fd7278'
            }
        }
           stage('Package') {
            steps {
                sh 'mvn package'
            }
        } 
        stage('Deploy') {
            steps {
                        nexusArtifactUploader(
                            nexusVersion: 'nexus3',
                            protocol: 'http',
                            nexusUrl: '172.10.0.141:8081/nexus',
                            groupId: 'tn.esprit.spring',
                            version: '1.0',
                            repository: 'devOps-project-releases',
                            credentialsId: 'nexus_creds',
                            artifacts: [
                                [artifactId: 'app.jar',
                                 classifier: '',
                                 file: 'target/app.jar',
                                 type: 'jar']
                            ]
                         )
            }
        }
        stage('docker-build') {
            steps {
                sh 'curl -u admin:admin -O http://localhost:8081/nexus/repository/devOps-project-releases/tn/esprit/spring/1.0/ExamThourayaS2-0.0.1-SNAPSHOT.jar'
                script {
                            docker.withRegistry('https://index.docker.io/v1', 'dockerhub_creds') {
                            def image = docker.build('fadhelbh/springdocker', '-f dockerfile .')
                            }
                }

            }
        }
               stage('docker-push') {
                 steps {
                     withCredentials([usernamePassword(credentialsId: 'dockerhub_creds', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                       sh "docker login -u fadhelbh -p u$#DQeu8pMbkQzV"
                       sh "docker tag fadhelbh/springdocker fadhelbh/springdocker:v1"
                       sh "docker push fadhelbh/springdocker:v1"
                      }
                 }
               } 
                 stage('Docker-compose-run') {
          steps {
            // Copy the docker-compose.yml file to the workspace
            // sh 'cp ~/mydockerfiles/docker-compose.yaml .'

            // Replace the image tag in the docker-compose.yml file with the current Git commit hash
            // sh "sed -i 's/my_app:.*/my_app:${GIT_COMMIT}/' docker-compose.yml"

            // Start the Docker Compose stack
            sh 'docker compose up -d'
          }
        }

            
        }
        
        
    }
